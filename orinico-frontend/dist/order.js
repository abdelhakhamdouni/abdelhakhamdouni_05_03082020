!function(Q){var I={};function B(F){if(I[F])return I[F].exports;var C=I[F]={i:F,l:!1,exports:{}};return Q[F].call(C.exports,C,C.exports,B),C.l=!0,C.exports}B.m=Q,B.c=I,B.d=function(Q,I,F){B.o(Q,I)||Object.defineProperty(Q,I,{enumerable:!0,get:F})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,I){if(1&I&&(Q=B(Q)),8&I)return Q;if(4&I&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var F=Object.create(null);if(B.r(F),Object.defineProperty(F,"default",{enumerable:!0,value:Q}),2&I&&"string"!=typeof Q)for(var C in Q)B.d(F,C,function(I){return Q[I]}.bind(null,C));return F},B.n=function(Q){var I=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(I,"a",I),I},B.o=function(Q,I){return Object.prototype.hasOwnProperty.call(Q,I)},B.p="",B(B.s=7)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getPanier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return getproductsFromStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return panierButtonAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return productElementHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return errazePanier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return toEuro; });\n/* harmony import */ var _dataHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n\nfunction getPanier(str) {\n  /***\r\n  * get panier count \r\n  */\n  let panierElement = document.querySelector('#panier');\n  let panier = 0;\n\n  if (localStorage.getItem(str)) {\n    let produit_count = JSON.parse(localStorage.getItem(str));\n    produit_count.forEach(element => {\n      panier += element.count;\n    });\n    panierElement.innerHTML = panier;\n  } else {\n    panierElement.innerHTML = panier;\n  }\n\n  return panier;\n}\nfunction getproductsFromStorage(str) {\n  let products = \"\";\n\n  if (window.localStorage.getItem(str)) {\n    products = JSON.parse(window.localStorage.getItem(str));\n\n    if (products.length > 0) {\n      products.forEach(produit => {\n        produit.price = produit.price;\n      });\n      return products;\n    } else {\n      return false;\n    }\n  } else {\n    return products;\n  }\n}\nfunction panierButtonAction() {\n  let clearBasket = document.querySelector('#clearBasket');\n  let btn_cleanBasket = document.querySelector('#btn-cleanBasket');\n  clearBasket.addEventListener('click', () => {\n    $('#clearBasketModal').modal('show');\n  });\n  btn_cleanBasket.addEventListener('click', () => {\n    errazePanier('products');\n    window.location.href = \"./index.html\";\n  });\n}\n/**\r\n * \r\n * @param {html contents} content \r\n * @param {array} data \r\n * \r\n */\n\nfunction productElementHandler(content, data) {\n  let datahandler = new _dataHandler__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"]();\n  let addtobasket = document.querySelector('#addToBasket');\n  let selecColor = document.querySelector('#select-color');\n  let panierElement = document.querySelector('#panier');\n  /**\r\n   * initialiser la couleur a la premiere couleur\r\n   */\n\n  data.color = selecColor.value; //addtobasket.style.display = \"none\"\n\n  selecColor.addEventListener('change', event => {\n    data.color = event.target.value;\n    addtobasket.style.display = \"block\";\n    console.log(data.color);\n  });\n  addtobasket.addEventListener('click', event => {\n    event.preventDefault();\n    data.count = 1;\n    data.price = data.price;\n    let panier = getPanier('products');\n    panierElement.innerHTML = ++panier;\n    datahandler.addToStorage(data);\n  });\n}\n/**\r\n * \r\n * @param {string} str name of the data to remove\r\n */\n\nfunction errazePanier(str) {\n  window.localStorage.removeItem(str);\n  getPanier(str);\n}\nfunction toEuro(number) {\n  return number.toString().slice(0, -2) + \",\" + number.toString().slice(-2);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DataHandler; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n\n/**\r\n * class to handel data from api\r\n * fetch data\r\n * add data to storage \r\n */\n\nclass DataHandler {\n  /**\r\n   * \r\n   * @param {string} url \r\n   * @return une promise data json de tous les teddies \r\n   */\n  fetchData(url) {\n    return fetch(url).then(data => data.json());\n  }\n\n  addToStorage(data) {\n    let products = [];\n    let produit_exist = false;\n\n    if (window.localStorage.getItem('products')) {\n      let products = JSON.parse(window.localStorage.getItem('products'));\n      console.log(JSON.stringify(products).indexOf(JSON.stringify(data))); //check if a product exist in cart\n\n      console.log(products);\n      products.forEach(produit => {\n        if (produit._id === data._id) {\n          produit_exist = true;\n          produit.count += 1;\n        }\n      });\n\n      if (produit_exist) {\n        window.localStorage.setItem('products', JSON.stringify(products));\n      } else {\n        products.push(data);\n        window.localStorage.setItem('products', JSON.stringify(products));\n      }\n    } else {\n      products.push(data);\n      window.localStorage.setItem('products', JSON.stringify(products));\n    }\n\n    $('.spinner-border').hide();\n    $('#mymodal').modal('show');\n  }\n\n  changeDataInStorage() {\n    let js_moins = document.querySelectorAll('.js_moins');\n    let js_plus = document.querySelectorAll('.js_plus');\n    let total = document.querySelector('#total');\n    console.log(Object(_utils__WEBPACK_IMPORTED_MODULE_0__[/* getproductsFromStorage */ \"c\"])('products'));\n    js_moins.forEach(ele => ele.addEventListener('click', event => {\n      let products = JSON.parse(window.localStorage.getItem('products'));\n      let id = event.target.parentNode.parentNode.dataset.id;\n      let count = document.querySelector(`#count_${id}`);\n      let price = document.querySelector(`#price_${id}`);\n      products.forEach(ele => {\n        if (ele._id === id) {\n          ele.count--;\n          count.innerHTML = ele.count;\n          price.innerHTML = ele.count * ele.price;\n          total.innerHTML = parseInt(total.innerHTML) - ele.price;\n        }\n\n        if (ele.count < 1) {\n          products = products.filter(element => element._id != id);\n        }\n      });\n      window.localStorage.setItem('products', JSON.stringify(products));\n\n      if (!Object(_utils__WEBPACK_IMPORTED_MODULE_0__[/* getproductsFromStorage */ \"c\"])('products')) {\n        window.location.href = './panier.html';\n      }\n\n      window.location.reload();\n    }));\n    js_plus.forEach(ele => ele.addEventListener('click', event => {\n      let products = JSON.parse(window.localStorage.getItem('products'));\n      let id = event.target.parentNode.parentNode.dataset.id;\n      let count = document.querySelector(`#count_${id}`);\n      let price = document.querySelector(`#price_${id}`);\n      products.forEach(ele => {\n        if (ele._id === id) {\n          ele.count++;\n          count.innerHTML = ele.count;\n          price.innerHTML = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[/* toEuro */ \"f\"])(ele.count * ele.price) + \"€\";\n          total.innerHTML = parseInt(Object(_utils__WEBPACK_IMPORTED_MODULE_0__[/* toEuro */ \"f\"])(total.innerHTML)) + parseInt(Object(_utils__WEBPACK_IMPORTED_MODULE_0__[/* toEuro */ \"f\"])(ele.price));\n        }\n      });\n      window.localStorage.setItem('products', JSON.stringify(products));\n\n      if (!Object(_utils__WEBPACK_IMPORTED_MODULE_0__[/* getproductsFromStorage */ \"c\"])('products')) {\n        window.location.href = './panier.html';\n      }\n\n      window.location.reload();\n    }));\n  }\n\n  incrimentCountOfProduct(id) {\n    let products = JSON.parse(window.localStorage.getItem('products'));\n    console.log(products);\n    let pro = products.filter(product => product._id === id);\n    console.log(pro);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n\n\nclass ControllerView {\n  /**\r\n   * @param {HTMLElement } element \r\n   * @param {HTMLContent} content \r\n   */\n  render(element, content) {\n    document.querySelector(element).innerHTML = content;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (ControllerView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kZWxzL2NvbnRyb2xsZXJWaWV3LmpzPzlkNTUiXSwibmFtZXMiOlsiQ29udHJvbGxlclZpZXciLCJyZW5kZXIiLCJlbGVtZW50IiwiY29udGVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImlubmVySFRNTCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTs7QUFFQSxNQUFNQSxjQUFOLENBQXFCO0FBRWpCO0FBQ0o7QUFDQTtBQUNBO0FBQ0lDLFFBQU0sQ0FBQ0MsT0FBRCxFQUFVQyxPQUFWLEVBQWtCO0FBQ3BCQyxZQUFRLENBQUNDLGFBQVQsQ0FBdUJILE9BQXZCLEVBQWdDSSxTQUFoQyxHQUE0Q0gsT0FBNUM7QUFDSDs7QUFSZ0I7O0FBV05ILHVFQUFmIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dldFBhbmllciwgY2hhbmdlUHJvZHVpdH0gZnJvbSAnLi91dGlscyc7XHJcblxyXG5jbGFzcyBDb250cm9sbGVyVmlldyB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50IH0gZWxlbWVudCBcclxuICAgICAqIEBwYXJhbSB7SFRNTENvbnRlbnR9IGNvbnRlbnQgXHJcbiAgICAgKi9cclxuICAgIHJlbmRlcihlbGVtZW50LCBjb250ZW50KXtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQpLmlubmVySFRNTCA9IGNvbnRlbnRcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29udHJvbGxlclZpZXc7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n')},,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/sass/main.scss\nvar main = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./src/models/controllerView.js\nvar controllerView = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./src/models/formHandler.js\n/**\r\n * class to handel form\r\n * check for error \r\n * log error\r\n * send data after check is ok\r\n */\nclass FormHandler {\n  /**\r\n   * \r\n   * @param {HTMLelement} element \r\n   * @param {HTMLInputElement type} type \r\n   * check the input data of a type \r\n   */\n  formValidate(element, type) {\n    let formvalide = [];\n\n    if (element.getAttribute("id") === "address") {\n      element.addEventListener("change", () => {\n        var re = new RegExp("[a-zA-Z0-9-_s]+$", "g");\n        this.onError(element, re, formvalide);\n      });\n      element.addEventListener("keyup", () => {\n        var re = new RegExp("[a-zA-Z0-9-_s]+$", "g");\n        this.onError(element, re, formvalide);\n      });\n      return;\n    } else if (element.getAttribute("id") === "code-postale") {\n      element.addEventListener("change", () => {\n        var re = /^\\d{5}$/;\n        this.onError(element, re, formvalide);\n      });\n      element.addEventListener("keyup", () => {\n        var re = /^\\d{5}$/;\n        this.onError(element, re, formvalide);\n      });\n      return;\n    }\n\n    switch (type) {\n      case "text":\n        element.addEventListener("change", () => {\n          var re = new RegExp("^[a-zA-Z]+$", "g");\n          this.onError(element, re, formvalide);\n        });\n        element.addEventListener("keyup", () => {\n          var re = new RegExp("^[a-zA-Z]+$", "g");\n          this.onError(element, re, formvalide);\n        });\n        break;\n\n      case "email":\n        element.addEventListener("change", () => {\n          var re = /([\\w-\\.]+@[\\w\\.]+\\.{1}[\\w]+)/;\n          this.onError(element, re, formvalide);\n        });\n        element.addEventListener("keyup", () => {\n          var re = /([\\w-\\.]+@[\\w\\.]+\\.{1}[\\w]+)/;\n          this.onError(element, re, formvalide);\n        });\n        break;\n\n      case "tel":\n        element.addEventListener("change", () => {\n          var re = /^(33|0)?(6|7|9)\\d{8}$/;\n          this.onError(element, re, formvalide);\n        });\n        element.addEventListener("keyup", () => {\n          var re = /^(33|0)?(6|7|9)\\d{8}$/;\n          this.onError(element, re, formvalide);\n        });\n        break;\n    }\n  }\n  /**\r\n   * \r\n   * @param {HTMLElement} element \r\n   * @param {RegExp} re \r\n   * @param {Boolean} formvalide \r\n   * log error and return true or false \r\n   */\n\n\n  onError(element, re, formvalide) {\n    console.log(element.getAttribute("id"));\n\n    if (!re.test(element.value)) {\n      element.classList.add("error");\n      element.classList.remove("valide");\n      element.style.border = "1px solid red";\n      element.style.boxShadow = "0 0 5px red";\n      formvalide = [...formvalide, false];\n    } else {\n      element.classList.remove("error");\n      element.classList.add("valide");\n      element.style.border = "1px solid lightgray";\n      element.style.boxShadow = "0 0 5px var(--success)";\n      formvalide = [...formvalide, true];\n    }\n\n    this.checkForm("input", formvalide);\n    return formvalide;\n  }\n  /**\r\n   * \r\n   * @param {HTMLelement} element \r\n   * @param {Boolean} valide \r\n   * check if form is valid and enabel button submit\r\n   */\n\n\n  async checkForm(element, valide) {\n    let inputs = document.querySelectorAll(element);\n    let show = false;\n    inputs.forEach(input => {\n      input.value !== "" && valide ? show = true : show = false;\n    });\n    document.querySelector("#submit").disabled = !show;\n  }\n  /**\r\n   * \r\n   * @param { HTMLelement from } ele \r\n   * @param { Object } produtcs \r\n   * get product ordered from localstorage and make order\r\n   */\n\n\n  async sendOrder(ele, produtcs_) {\n    let orderData = {};\n    orderData.products = produtcs_;\n    let contact = {};\n    let date = new Date();\n    let curentDate = date.getDate() + "-" + (1 * date.getMonth() + 1) + "-" + date.getFullYear();\n    let curentTime = date.getHours() + "H:" + date.getMinutes() + "m";\n    orderData["date"] = curentDate + " " + curentTime;\n    document.querySelectorAll(ele).forEach(element => {\n      orderData[element.getAttribute("id")] = element.value;\n      /**\r\n       * create body to send on post request\r\n       */\n    });\n\n    if (window.localStorage.getItem("order")) {\n      let myOrder = JSON.parse(window.localStorage.getItem("order"));\n      myOrder.push(orderData);\n      window.localStorage.setItem("order", JSON.stringify(myOrder));\n    } else {\n      window.localStorage.setItem("order", JSON.stringify([orderData]));\n    }\n    /**\r\n     * get list of products id and create the array\r\n     */\n\n\n    let products = [];\n    orderData.products.forEach(prod => {\n      products.push(prod._id);\n    });\n    /**\r\n    * \r\n    * do post request to the api \r\n    */\n\n    return fetch(\'http://localhost:3000/api/teddies/order\', {\n      headers: {\n        "Content-type": "application/json"\n      },\n      method: \'post\',\n      body: JSON.stringify({\n        contact: {\n          lastName: orderData.lastName,\n          firstName: orderData.firstName,\n          city: orderData.city,\n          email: orderData.email,\n          address: orderData.address\n        },\n        products: products\n      })\n    });\n  }\n\n}\n// EXTERNAL MODULE: ./src/models/utils.js\nvar utils = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/controllers/order.page.js\n\n\n\n\nObject(utils["b" /* getPanier */])(\'products\');\nlet total = 0;\nlet formHandler = new FormHandler();\n/**\r\n * get products in basket\r\n */\n\nlet products = Object(utils["c" /* getproductsFromStorage */])(\'products\');\nlet content = `\n<section class="row w-100 bg-light p-5">\n    <article class="col-md-6">\n        <h2 class="title text-center mb-3 text-uppercase">\n            Mes coordonnées\n        </h2>\n        <form class="order_formulaire" novalidate>\n            <div class="form-row">\n                <div class="form-group col-md-6">\n                <label for="name">Nom</label>\n                <input type="text" class="form-control" id="lastName"><span class="validecheck"></span>\n                <div class="alert alert-danger">Le nom est invalide</div>\n                </div>\n                <div class="form-group col-md-6">\n                <label for="prenom">Prénom</label>\n                <input type="text" class="form-control" id="firstName"><span class="validecheck"></span>\n                <div class="alert alert-danger">Le prénom est invalide</div>\n                </div>\n            </div>\n\n            <div class="form-group">\n                <label for="email">E-mail</label>\n                <input type="email" class="form-control" id="email" placeholder="jean.dao@exemple.com"><span class="validecheck"></span>\n                <div class="alert alert-danger">L\'adresse email n\'est pas valide! </div>\n            </div>\n            <div class="form-group">\n                <label for="telephone">Téléphone</label>\n                <input type="tel" class="form-control" id="telephone" placeholder="0612345678"><span class="validecheck"></span>\n                <div class="alert alert-danger">Le numero de téléphone n\'est pas valide! </div>\n            </div>\n            <div class="form-group">\n                <label for="adresse">Adresse</label>\n                <input type="text" class="form-control" id="address" placeholder="6 rue de paris"><span class="validecheck"></span>\n            </div>\n            <div class="form-row">\n                <div class="form-group col-md-6">\n                    <label for="code-postale">Code postale</label>\n                    <input type="text" class="form-control" id="code-postale" placeholder="75000"><span class="validecheck"></span>\n                    <div class="alert alert-danger">Le code postale n\'est pas valide! </div>\n                </div>\n                <div class="form-group col-md-6">\n                    <label for="ville">Ville</label>\n                    <input type="text" class="form-control" id="city" placeholder="Paris"><span class="validecheck"></span>\n                    <div class="alert alert-danger">Le ville n\'est pas valide! </div>\n                </div>\n            </div>\n\n            <button type="submit" id="submit" class="btn btn-primary" disabled >Passer ma commande</button>\n        </form>\n    </article>\n    <article class="col-md-6">\n        <h2 class="title text-center mb-3 text-uppercase">\n            Recapétulatif de votre commande\n        </h2>\n        <table class="table bg-white border">\n        <thead>\n            <th class="border">Produit</th>\n            <th class="border">Npm</th>\n            <th class="border">Quontité</th>\n            <th class="border">Prix</th>\n            <th class=" border text-right">Sous-total</th>\n        </thead>\n        <tbody>`;\nproducts.forEach(element => {\n  total += element.count * element.price;\n  content += `\n                        <tr>\n                            <td class="border"><img src="${element.imageUrl}" alt="${element.name}"></td>\n                            <td class="border">${element.name}</td>\n                            <td class="border">\n                                <span class="">${element.count}</span>\n                            </td>    \n                            <td class="border">${Object(utils["f" /* toEuro */])(element.price)}</td>\n                            <td class="border text-right">${Object(utils["f" /* toEuro */])(element.price * element.count)}</td>\n                        </tr>\n                    `;\n});\ncontent += `<tr class="bg-light">\n                    <td colspan="4" class="text-right"><strong>Total</strong></td>\n                    <td class="border bg-light text-right"><strong>${Object(utils["f" /* toEuro */])(total)}€</strong></td>\n                    </tr>\n                    </tbody>\n                    <tfoot>\n                    </tfoot>\n                </table>\n        <div>\n            <p class="text-muted text-center">\n                Tous nos prix sont exprimés avec la TVA incluse\n            </p>\n        </div>\n    </article>\n</section>`;\nlet order_page_controllerView = new controllerView["a" /* default */]();\norder_page_controllerView.render(\'main\', content);\nwindow.addEventListener(\'DOMContentLoaded\', () => {\n  let formValide;\n  document.querySelector("#submit").disabled = true;\n  document.querySelectorAll(\'input\').forEach(element => {\n    formValide = formHandler.formValidate(element, element.getAttribute(\'type\'));\n  });\n  document.querySelector(\'form\').addEventListener(\'submit\', event => {\n    event.preventDefault();\n    formHandler.sendOrder(\'input\', products).then(response => response.json()).then(order => {\n      localStorage.setItem(\'lastOrder\', JSON.stringify(order));\n      window.location.href = "./confirm.html";\n    }).then(err => console.error(err));\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n')},function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Fzcy9tYWluLnNjc3M/ZGJhZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n")}]);